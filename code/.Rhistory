maxp<-0
for (i in 1:Inf)
term[i]<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
x<-c(1,1,1)
y<-c(2,2,3)
minkowski(x,y,p)
minkowski(x,y,0)
minkowski(x,y,max)
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & is.character(p)==TRUE & p=='max') {
maxp<-0
for (i in 1:Inf)
term[i]<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
x<-c(1,1,1)
y<-c(2,2,3)
minkowski(x,y,p)
minkowski(x,y,0)
minkowski(x,y,max)
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & p='max') {
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & p==max) {
maxp<-0
for (i in 1:Inf)
term[i]<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
x<-c(1,1,1)
minkowski(x,y,p)
minkowski(x,y,max)
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & p==max) {
maxp<-0
for (i in 1:Inf)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
x<-c(1,1,1)
y<-c(2,2,3)
minkowski(x,y,p)
minkowski(x,y,0)
minkowski(x,y,max)
minkowski<- function(x,y,p) {
if (length(x)==length(y) & is.numeric(p)==TRUE) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & p==max) {
maxp<-0
for (i in 1:Inf)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
y<-c(2,2,3)
minkowski(x,y,p)
minkowski(x,y,0)
minkowski(x,y,max)
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & p==max) {
maxp<-0
for (i in 1:Inf)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
if (length(x)==length(y) & is.numeric(p)==TRUE) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & p==max) {
maxp<-0
for (i in 1:Inf)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
if (length(x)==length(y) & is.numeric(p)==TRUE) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & p==max) {
maxp<-0
for (i in 1:Inf)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
maxp<-0
for (i in 1:Inf)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
if (length(x)==length(y) & is.numeric(p)==TRUE) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & p==max) {
maxp<-0
for (i in 1:Inf)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
x<-c(1,1,1)
y<-c(2,2,3)
minkowski(x,y,p)
minkowski(x,y,0)
minkowski(x,y,max)
if (length(x)==length(y) & is.numeric(p)==TRUE) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & p==max) {
maxp<-0
for (i in 1:Inf)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
minkowski(x,y,max)
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE & p>=1) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & is.character(p)==TRUE & p=='max') {
maxp<-0
for (i in 1:Inf)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
x<-c(1,1,1)
y<-c(2,2,3)
minkowski(x,y,p)
minkowski(x,y,0)
minkowski(x,y,max)
minkowski(x,y,'max')
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE & p>=1) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & is.character(p)==TRUE & p==max) {
maxp<-0
for (i in 1:Inf)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
minkowski(x,y,max)
minkowski(x,y,'max')
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE & p>=1) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & is.character(p)==TRUE & p=='max') {
maxp<-0
for (i in 1:Inf)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
minkowski(x,y,'max')
print(maxp)
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE & p>=1) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & is.character(p)==TRUE & p=='max') {
maxp<-0
for (i in 1:Inf)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
minkowski(x,y,'max')
maxp<-max(term, maxp)
print(maxp)
if (length(x)==length(y) & is.numeric(p)==TRUE & p>=1) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & is.character(p)==TRUE & p=='max') {
maxp<-0
for (i in 1:Inf)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
minkowski(x,y,'max')
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE & p>=1) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & is.character(p)==TRUE & p=='max') {
maxp<-0
for (i in 1:100000)
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
minkowski(x,y,'max')
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE & p>=1) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & is.character(p)==TRUE & p=='max') {
maxp<-0
for (i in 1:length(x))
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
minkowski(x,y,'max')
### Function minkowski()
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE & p>=1) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & is.character(p)==TRUE & p=='max') {
maxp<-0
for (i in 1:length(x))
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE & p>=1) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & is.character(p)==TRUE & p=='max') {
maxp<-0
for (i in 1:length(x))
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
minkowski(x,y,'charac')
expect_error(minkowski(point1, point2, p='min'))
context("Tests for minkowski()")
test-that("minkowski works as expected", {
point1<-c(0,0)
point2<-c(1,1)
point3<-sqrt(c(2,2))
point4<-c(0,1)
point5<-c(1,1,1)
})
context("Tests for minkowski()")
test_that("minkowski works as expected", {
point1<-c(0,0)
point2<-c(1,1)
point3<-sqrt(c(2,2))
point4<-c(0,1)
point5<-c(1,1,1)
})
library(testthat)
minkowski<- function(x,y,p=1) {
if (length(x)==length(y) & is.numeric(p)==TRUE & p>=1) {
term<-c()
sump<-0
for (i in 1:length(x))
term<-((abs(x[i]-y[i]))^p)
sump<-sump+term
print(sump^(1/p))
} else if (length(x)==length(y) & is.character(p)==TRUE & p=='max') {
maxp<-0
for (i in 1:length(x))
term<-(abs(x[i]-y[i]))
maxp<-max(term, maxp)
print(maxp)
} else if (length(x) != length(y)) {
stop("x and y have different lengths")
} else if (is.numeric(p)==TRUE & p<1) {
stop("p cannot be less than 1")
} else if (is.character(p)==TRUE & p!='max') {
stop("invalid character value for p")
}
}
test_file(test-minkowski.R)
test_file('test-minkowski.R')
setwd("C:/Users/jasmi/Desktop/STAT133/workout2/code")
library(testthat)
test_file('test-minkowski.R')
